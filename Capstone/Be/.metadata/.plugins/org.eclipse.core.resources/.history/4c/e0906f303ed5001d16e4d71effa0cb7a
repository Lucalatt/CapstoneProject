package it.epicode.lucal.App.controllers;

import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import it.epicode.lucal.App.entities.Chat;

import it.epicode.lucal.App.entities.Messaggio;
import it.epicode.lucal.App.repositories.MessageRepo;
import it.epicode.lucal.App.services.ChatService;

@RestController
@RequestMapping("/")
public class ChatController {
	
	 @Autowired
	    private ChatService cs;
	 
	 @Autowired
	    private MessageRepo mr;

	    @GetMapping("chat")
	    public List<Chat> getChats() {
	        return cs.getAll();
	    }

	    @PostMapping()
	    public Chat createChat(@RequestBody Chat chat) {
	        return cs.createChat(chat);
	    }

	    @GetMapping("/{id}")
	    public ResponseEntity<Chat> getChatById(@PathVariable int id) {
	        Optional<Chat> optionalChat = cs.getById(id);
	        return optionalChat.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());
	    }

	    @DeleteMapping("/{id}")
	    public void deleteChat(@PathVariable int id) {
	        cs.deleteById(id);
	    }

	    @GetMapping("/{chatId}/messages")
	    public List<Messaggio> getMessagesByChatId(@PathVariable int chatId) {
	        return cs.getMessagesByChatId(chatId);
	    }
	    
	    @PostMapping("/chats/{chatId}/messages")
	    public ResponseEntity<Messaggio> addMessageToChat(@PathVariable int chatId, @RequestBody Messaggio messaggio) {
	    	Messaggio savedMessage = cs.addMessageToChat(chatId, messaggio);
	        return ResponseEntity.ok(savedMessage);
	    }
	    

}
